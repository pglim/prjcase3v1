name: CICD for Serverless Application Dev
run-name: ${{ github.actor }} is doing CICD for Serverless Application

on:
  push:
    branches: [ main, "*" ]

jobs:
  Devpre-deploy: #job name(can be any name,which will appear on the github action page/pipeline)
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job is automatically triggerd by a ${{ github.event_name }} event."

  Devinstall-dependencies:
    runs-on: ubuntu-latest
    needs: Devpre-deploy
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install

  Devunit-testing:
    runs-on: ubuntu-latest
    needs: Devinstall-dependencies
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install
      - name: Run unit testing command
        run: npm run test

  Devdeploy:
    runs-on: ubuntu-latest
    needs: Devunit-testing
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - name: Serverless deploy to AWS
        uses: serverless/github-action@master
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  Stagingunit-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install
      - name: Run unit testing command
        run: npm run test

  Stagingdeploy:
    runs-on: ubuntu-latest
   # needs: Stagingunit-testing
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - name: Serverless deploy to AWS
        uses: serverless/github-action@master
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  Productionunit-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install
      - name: Run unit testing command
        run: npm run test

  Productiondeploy:
    runs-on: ubuntu-latest
   # needs: Productionunit-testing
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - name: Serverless deploy to AWS
        uses: serverless/github-action@master
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
